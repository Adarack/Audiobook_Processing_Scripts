# Beets configuration file for audiobook processing
# This configuration is tailored for managing audiobooks with Beets.
# It includes plugins and settings optimized for audiobook metadata, file organization, and optional web UI.

# === PLUGINS ===
# List of plugins to enable for Beets.
# - audible: Fetch metadata from Audible for audiobooks.
# - copyartifacts: Copy additional files (e.g., metadata.yml, cover images) during import.
# - edit: Allows manual editing of metadata.
# - fromfilename: Extract metadata from filenames.
# - scrub: Remove existing metadata tags before applying new ones.
# - web: Enable the Beets Web UI for managing your library.
# - permissions: Set custom file and directory permissions.
# - inline: Define custom metadata fields.
# - hook: Trigger custom scripts or commands during Beets events.
plugins: audible copyartifacts edit fromfilename scrub web permissions inline hook

# === WEB SERVER ===
# Configuration for the optional Beets Web UI.
# This allows you to manage your library through a web browser.
web:
    host: 0.0.0.0  # Bind the web server to all network interfaces.
    port: 8337     # Port number for the web server.
    cors: '*'      # Allow cross-origin requests from any domain.
    reverse_proxy: # Leave empty unless using a reverse proxy.

# === LIBRARY DIRECTORY ===
# The main directory where audiobooks will be stored after import.
directory: /audiobooks

# === FILE MANAGEMENT ===
# Move imported files into the library directory (instead of copying them).
move: yes

# === PERMISSIONS ===
# Set file and directory permissions for imported audiobooks.
# These settings are very open, which is useful for Docker or shared environments.
permissions:
  file: 777  # Full read/write/execute permissions for files.
  dir: 777   # Full read/write/execute permissions for directories.

# === IMPORTER SETTINGS ===
# Automatically write a `metadata.yml` file to audiobook folders during import.
importer:
  write: yes

# === FILE ORGANIZATION RULES ===
# Define how audiobooks are organized into folders based on metadata.
paths:
  # For books that belong to a series and have a series position.
  "albumtype:audiobook series_name::.+ series_position::.+": $albumartist/%ifdef{series_name}/%ifdef{series_position} - $album%aunique{}%ifdef{asin, (ASIN $asin)}/$title - $albumartist
  # For books that belong to a series but lack a series position.
  "albumtype:audiobook series_name::.+": $albumartist/%ifdef{series_name}/$album%aunique{}%ifdef{asin, (ASIN $asin)}/$title - $albumartist
  # For stand-alone audiobooks.
  "albumtype:audiobook": $albumartist/$album%aunique{}%ifdef{asin, (ASIN $asin)}/$title - $albumartist
  # Default fallback for unmatched files.
  default: $albumartist/$album%aunique{}%ifdef{asin, (ASIN $asin)}/$title - $albumartist
  # For single files not part of an album.
  singleton: Non-Album/$title - $albumartist
  # For compilations (e.g., multiple authors or narrators).
  comp: Compilations/$album%aunique{}%ifdef{asin, (ASIN $asin)}/$title - $albumartist
  # For soundtracks.
  albumtype_soundtrack: Soundtracks/$album%ifdef{asin, (ASIN $asin)}/$title - $albumartist

# === METADATA SOURCES ===
# Disable MusicBrainz as it is not helpful for audiobooks.
musicbrainz:
  enabled: no

# === AUDIBLE PLUGIN SETTINGS ===
# Configure how the Audible plugin fetches and applies metadata.
audible:
  # Match individual files to chapters if the number of files matches the number of chapters.
  match_chapters: true
  # Disable the source_weight penalty for metadata sources.
  source_weight: 0.0
  # Fetch cover art for audiobooks.
  fetch_art: true
  # Include only the author (not the narrator) in the artist tag.
  include_narrator_in_artists: false
  # Remove ", Book X" from the end of titles.
  keep_series_reference_in_title: false
  # Keep subtitles that reference the series name and book number.
  keep_series_reference_in_subtitle: true
  # Write a description file (`desc.txt`) for each audiobook.
  write_description_file: true
  # Write a reader file (`reader.txt`) for each audiobook.
  write_reader_file: true
  # Set the region for Audible metadata (default is "us").
  region: us
  # Uncomment and set your Goodreads API key if you want to fetch metadata from Goodreads.
  # goodreads_apikey: [APIKEYHERE]

# === COPYARTIFACTS PLUGIN SETTINGS ===
# Specify additional file types to copy during import.
# This ensures that sidecar files (e.g., metadata.yml, cover images) are preserved.
copyartifacts:
  extensions: .yml .yaml .nfo .txt .json .jpg .png .ico .cue .opf .pdf

# === SCRUB PLUGIN SETTINGS ===
# Automatically remove existing metadata tags before applying new ones.
scrub:
  auto: yes  # Optional, enabling this is a personal preference.